---
apiVersion: v1
kind: Secret
metadata:
  name: kong-postgres-config
  namespace: egov
type: Opaque
data:
  # Using existing PostgreSQL LTS instance
  POSTGRES_HOST: cG9zdGdyZXNxbC1sdHM=  # postgresql-lts
  POSTGRES_PORT: NTQzMg==              # 5432
  POSTGRES_USER: cG9zdGdyZXM=          # postgres
  POSTGRES_PASSWORD: elZPdFFRZnBXYw==  # Using actual password from postgresql-lts secret
  POSTGRES_DATABASE: cG9zdGdyZXM=      # postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-db
  namespace: egov
  labels:
    app: kong-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-db
  template:
    metadata:
      labels:
        app: kong-db
    spec:
      initContainers:
      - name: kong-migration
        image: mithunhegdeegov/gateway-kong:v1.0.0
        env:
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_PG_HOST
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_HOST
        - name: KONG_PG_PORT
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_PORT
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_USER
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_PASSWORD
        - name: KONG_PG_DATABASE
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_DATABASE
        command: [ "/bin/sh" ]
        args: [ "-c", "kong migrations up && kong migrations finish" ]
      containers:
      - name: kong
        image: mithunhegdeegov/gateway-kong:v1.0.0
        env:
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_PG_HOST
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_HOST
        - name: KONG_PG_PORT
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_PORT
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_USER
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_PASSWORD
        - name: KONG_PG_DATABASE
          valueFrom:
            secretKeyRef:
              name: kong-postgres-config
              key: POSTGRES_DATABASE
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
        - name: KONG_ENV_KEYCLOAK_BASE_URL
          value: "http://keycloak.keycloak.svc.cluster.local:8080/keycloak-test"
        - name: KONG_PLUGINS
          value: "bundled,dynamic-jwt,keycloak-rbac,header-enrichment"
        ports:
        - containerPort: 8000
          name: proxy
        - containerPort: 8443
          name: proxy-ssl
        - containerPort: 8001
          name: admin
        livenessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kong-db-proxy
  namespace: egov
spec:
  type: ClusterIP
  ports:
  - name: proxy-http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: proxy-https
    port: 443
    targetPort: 8443
    protocol: TCP
  - name: admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  selector:
    app: kong-db 
 